/*! lux-explorer 0.11.3 */
angular.module("insight",["ngResource","ngRoute","ngLodash","ui.bootstrap","ui.route","monospaced.qrcode","gettext","angularMoment","insight.system","insight.socket","insight.blocks","insight.chart","insight.charts","insight.richList","insight.transactions","insight.address","insight.search","insight.statistics","insight.status","insight.markets","insight.connection","insight.currency","insight.messages","insight.luxcorelib","insight.bignumber","insight.solidity_coder","insight.web3_utils","insight.contracts","insight.opcodes","insight.networks","insight.token"]),angular.module("insight.system",["ngScrollbars","chart.js"]),angular.module("insight.socket",[]),angular.module("insight.blocks",[]),angular.module("insight.charts",[]),angular.module("insight.chart",[]),angular.module("insight.richList",[]),angular.module("insight.transactions",["ngScrollbars","jQueryScrollbar"]),angular.module("insight.address",[]),angular.module("insight.search",[]),angular.module("insight.token",["ngNumeraljs"]),angular.module("insight.statistics",["ngNumeraljs"]),angular.module("insight.status",[]),angular.module("insight.markets",[]),angular.module("insight.connection",[]),angular.module("insight.currency",[]),angular.module("insight.messages",[]),angular.module("insight.messages",[]),angular.module("insight.luxcorelib",[]),angular.module("insight.contracts",[]),angular.module("insight.opcodes",[]),angular.module("insight.networks",[]),angular.module("insight.solidity_coder",[]),angular.module("insight.web3_utils",[]),angular.module("insight.bignumber",[]),angular.module("insight.address").controller("AddressController",function($scope,$rootScope,$document,$routeParams,$location,$window,Address,getSocket,Constants,ContractsInfo,Contracts,ERC20AddressBalances,ERC20ContractInfo,Web3Utils){var self=this,socket=getSocket($scope),addrStr=$routeParams.addrStr;self.contractAddress=null,Web3Utils.isAddress(addrStr)&&(self.contractAddress=addrStr,addrStr=Contracts.getBitAddressFromContractAddress(addrStr));var hexString="0000000000000000000000000000000000000000000000000000000000000000";self.STORAGE_ROWS=Constants.STORAGE_ROWS,self.STORAGE_CONST={STRING:"string",NUMBER:"number",ADDRESS:"address",DATA:"data"},self.storageViews=[self.STORAGE_CONST.DATA,self.STORAGE_CONST.STRING,self.STORAGE_CONST.NUMBER,self.STORAGE_CONST.ADDRESS],self.storage={},self.info=null,self.erc20ContractInfo=null,self.scrollConfig={autoHideScrollbar:!1,theme:"custom",advanced:{updateOnContentResize:!0},scrollInertia:0},self.tooltipOptions={animation:"fade",theme:"tooltipster-black",trigger:"click",interactive:!0},self.qrColors={background:Constants.QRCOLOR.background,color:Constants.QRCOLOR.color},self.balances=[];var _startSocket=function(){socket.on("luxd/addresstxid",function(data){if(data.address===addrStr){var base=$document.find("base"),beep=new Audio(base[0].href+"/sound/transaction.mp3");$rootScope.$broadcast("tx",data.txid),beep.play()}}),socket.emit("subscribe","luxd/addresstxid",[addrStr])},_parseStorageRowType=function(hex,type){switch(type){case"string":var str="",i=0,l=hex.length;for("0x"===hex.substring(0,2)&&(i=2);l>i;i+=2){var code=parseInt(hex.substr(i,2),16);if(0===code&&str)break;str+=String.fromCharCode(code)}return str;case"number":return parseInt(hex,16);case"address":return hex.substr(-40);case"data":return hexString.substr(hex.length).concat(hex);default:return hex}},_defineDefaultState=function(string,number){var stringMatchUnread=string.match(/[^a-zA-Z0-9;:'".,\/\]\[?!&%#@)(_`><\s]/g)||[],stringMatchRead=string.match(/[a-zA-Z0-9;:'".,\/\]\[?!&%#@)(_`><]/g),isLastSymbolUnread=string[string.length-1]===stringMatchUnread[0];return~number.toString().indexOf("e")?!isLastSymbolUnread&&stringMatchUnread.length||!stringMatchRead?self.STORAGE_CONST.DATA:self.STORAGE_CONST.STRING:self.STORAGE_CONST.NUMBER},_formStorageInfo=function(){var rows=[];for(var row in self.info.storage)if(self.info.storage.hasOwnProperty(row))for(var key in self.info.storage[row]){var newRow={values:{},keys:{}};if(self.info.storage[row].hasOwnProperty(key)){for(var CONST in self.STORAGE_CONST){var constName=self.STORAGE_CONST[CONST];newRow.values[constName]=_parseStorageRowType(self.info.storage[row][key],constName),newRow.keys[constName]=_parseStorageRowType(key,constName)}newRow.values.state=_defineDefaultState(newRow.values.string,newRow.values.number,newRow.values.address),newRow.keys.state=_defineDefaultState(newRow.keys.string,newRow.keys.number,newRow.keys.address),rows.push(newRow)}}return rows},_stopSocket=function(){socket.emit("unsubscribe","luxd/addresstxid",[addrStr])};socket.on("connect",function(){_startSocket()}),$scope.$on("$destroy",function(){_stopSocket()}),self.params=$routeParams,self.findOne=function(){$rootScope.currentAddr=addrStr,_startSocket(),ERC20AddressBalances.query({balanceAddress:addrStr},function(balances){balances&&balances.length&&(self.balances=balances.map(function(balance){return balance.contract&&(balance.contract.contract_address_base=Contracts.getBitAddressFromContractAddress(balance.contract.contract_address)),balance}))}),Address.get({addrStr:addrStr},function(address){$rootScope.titleDetail=address.addrStr.substring(0,7)+"...",$rootScope.flashMessage=null,self.address=address;var ethAddress=Contracts.getEthAddressFromBitAddress(addrStr);ethAddress&&(ERC20ContractInfo.get({contractAddress:ethAddress},function(data){data&&(self.erc20ContractInfo=data)}),ContractsInfo.get({contractAddressStr:ethAddress},function(info){info&&(self.info=info,self.opcodesStr=Contracts.getContractOpcodesString(info.code),self.storage.rows=_formStorageInfo(),self.storage.storageLength=Object.keys(info.storage).length,self.storage.viewRows=Constants.STORAGE_ROWS)},function(e){console.log("e",e)}))},function(e){400===e.status?$rootScope.flashMessage="Invalid Address: "+addrStr:503===e.status?$rootScope.flashMessage="Backend Error. "+e.data:$rootScope.flashMessage="Address Not Found",$location.path("/")})},self.toggleStorageRowView=function(index,stateType){var currentStateNumber=self.storageViews.indexOf(self.storage.rows[index][stateType].state);self.storage.rows[index][stateType].state=self.storageViews[(currentStateNumber+1)%self.storageViews.length]},self.showMoreStorageRows=function(limit){self.storage.viewRows=limit},self.tokenDropdownOpen=!1,self.toggleDropdownTokenTracker=function(){self.tokenDropdownOpen=!self.tokenDropdownOpen}}),angular.module("insight.blocks").controller("BlocksController",function($scope,$rootScope,$routeParams,$location,moment,Block,Blocks,BlockByHeight){var self=this;self.loading=!1,self.date=null,self.datepicker={date:null,format:"yyyy-MM-dd",isOpened:!1,dateOptions:{startingDay:1,maxDate:new Date,minDate:new Date(0)}},$routeParams.blockHeight&&BlockByHeight.get({blockHeight:$routeParams.blockHeight},function(hash){$location.path("/block/"+hash.blockHash)},function(){$rootScope.flashMessage="Bad Request",$location.path("/")}),$scope.$watch(function(){return self.date},function(newValue,oldValue,scope){newValue!==oldValue&&scope.BC.datepicker.isOpened&&(self.datepicker.date=newValue.getTime(),$location.path("/blocks-date/"+moment(newValue).format("YYYY-MM-DD")))}),self.openDatepicker=function(e){e.preventDefault(),e.stopPropagation(),self.datepicker.isOpened=!0},self.disableDatepicker=function(data){var date=data.date,mode=data.mode;return"day"===mode&&(0===date.getDay()||6===date.getDay())},self.loadList=function(){if(self.loading=!0,$routeParams.blockDate&&(self.detail="On "+$routeParams.blockDate),$routeParams.startTimestamp){var d=new Date(1e3*$routeParams.startTimestamp),m=d.getMinutes();10>m&&(m="0"+m),self.before=" before "+d.getHours()+":"+m}$rootScope.titleDetail=self.detail,Blocks.get({blockDate:$routeParams.blockDate,startTimestamp:$routeParams.startTimestamp},function(res){self.loading=!1;var date=new Date(res.pagination.current);self.date=new Date(date.getUTCFullYear(),date.getUTCMonth(),date.getUTCDate(),date.getUTCHours(),date.getUTCMinutes(),date.getUTCSeconds()),self.datepicker.date=self.date.getTime(),self.blocks=res.blocks,self.pagination=res.pagination})},self.findOne=function(){self.loading=!0,Block.get({blockHash:$routeParams.blockHash},function(block){$rootScope.titleDetail=block.height,$rootScope.flashMessage=null,self.loading=!1,self.block=block},function(e){400===e.status?$rootScope.flashMessage="Invalid Transaction ID: "+$routeParams.txId:503===e.status?$rootScope.flashMessage="Backend Error. "+e.data:$rootScope.flashMessage="Block Not Found",$location.path("/")})},self.calcDatesDifference=function(){var present=new Date,presentDate=moment.utc([present.getUTCFullYear(),present.getUTCMonth(),present.getUTCDate()]),currentDate=moment.utc(self.pagination.current);return currentDate.from(presentDate)},self.params=$routeParams}),angular.module("insight.charts").controller("ChartsController",function($scope,$routeParams,BigNumber,StatisticsBalanceIntervals,StatisticsByDaysSupply,StatisticsRicherThan,MarketsInfo,getSocket,$q,StatisticChart){var self=this;self.chartDays=$routeParams.days?$routeParams.days:60;var statisticChart=new StatisticChart(self.chartDays);statisticChart.load(StatisticsByDaysSupply,"sum","supply",!1),$scope.$on("chart-create",function(evt,chart){"line"===chart.chart.canvas.id&&(statisticChart.changeChartColor(chart),chart.update())}),self.chartOptions=statisticChart.chartOptions,self.daysButtons=statisticChart.daysButtons,self.balanceIntervals=[],self.marketsInfo=null,self.richerThanIntervals=[];var socket=getSocket($scope);self.init=function(){_getInfo(),_getRicherThan()};var _getRicherThan=function(){return StatisticsRicherThan.query(function(intervals){self.richerThanIntervals=intervals})},_getInfo=function(){return $q.all([StatisticsBalanceIntervals.query().$promise,MarketsInfo.get().$promise]).then(function(results){if(results[0]&&results[1]){self.marketsInfo=results[1];var items=results[0],intervals=[],countAddresses=0,maxCountAddresses=0,sumCoins=new BigNumber(0),maxSumCoins=new BigNumber(0);items.forEach(function(interval){var sumBN=new BigNumber(interval.sum.toString());countAddresses+=interval.count,interval.count>maxCountAddresses&&(maxCountAddresses=interval.count),sumCoins=sumCoins.plus(sumBN),maxSumCoins.lt(sumBN)&&(maxSumCoins=new BigNumber(sumBN))}),items.forEach(function(interval){var addressesPercent=interval.count&&countAddresses?interval.count/countAddresses*100:0,addressesRelativePercent=interval.count&&maxCountAddresses?interval.count/maxCountAddresses*100:0,sumBN=new BigNumber(interval.sum.toString()),coinsPercent=sumBN.gt(0)&&sumCoins.gt(0)?sumBN.dividedBy(sumCoins).mul(100):new BigNumber(0),coinsRelativePercent=sumBN.gt(0)&&maxSumCoins.gt(0)?sumBN.dividedBy(maxSumCoins).mul(100):new BigNumber(0);intervals.push({min:interval.min,max:interval.max,count:interval.count,sum:sumBN.toString(10),addressesPercent:addressesPercent.toFixed(2),addressesRelativePercent:addressesRelativePercent.toFixed(2),coinsPercent:coinsPercent.toNumber().toFixed(2),coinsRelativePercent:coinsRelativePercent.toNumber().toFixed(2)})}),self.balanceIntervals=intervals}})};socket.on("markets_info",function(marketsInfo){self.marketsInfo=marketsInfo})}),angular.module("insight.connection").controller("ConnectionController",function($scope,$window,Status,getSocket,PeerSync){$scope.apiOnline=!0,$scope.serverOnline=!0,$scope.clienteOnline=!0;var socket=getSocket($scope);socket.on("connect",function(){$scope.serverOnline=!0,socket.on("disconnect",function(){$scope.serverOnline=!1})}),$scope.getConnStatus=function(){PeerSync.get({},function(peer){$scope.apiOnline=peer.connected,$scope.host=peer.host,$scope.port=peer.port},function(){$scope.apiOnline=!1})},socket.emit("subscribe","sync"),socket.on("status",function(sync){$scope.sync=sync,$scope.apiOnline="aborted"!==sync.status&&"error"!==sync.status}),$window.addEventListener("offline",function(){$scope.$apply(function(){$scope.clienteOnline=!1})},!0),$window.addEventListener("online",function(){$scope.$apply(function(){$scope.clienteOnline=!0})},!0)}),angular.module("insight.contracts").controller("ContractsController",function($scope,$rootScope,$routeParams,$location,Contracts){try{var addrStr=Contracts.getBitAddressFromContractAddress($routeParams.contractAddressStr);return $location.path("/address/"+addrStr),!1}catch(e){return $rootScope.flashMessage="Invalid Address: "+$routeParams.contractAddressStr,$location.path("/"),!1}}),angular.module("insight.currency").controller("CurrencyController",function($scope,$rootScope,Currency,Constants,BigNumber,$filter){var self=this;$rootScope.currency={symbol:Constants.DEFAULT_CURRENCY,factor:1,bitstamp:0},$rootScope.token={};var _roundFloat=function(x,n){return parseInt(n,10)&&parseFloat(x)||(n=0),Math.round(x*Math.pow(10,n))/Math.pow(10,n)};$rootScope.currency.getConvertion=function(value){if(value=Number(value),!isNaN(value)&&"undefined"!=typeof value&&null!==value){if(0===value)return"0 "+$rootScope.currency.symbol;var response;return $rootScope.currency.symbol===Constants.CURRENCY.USD?response=_roundFloat(value*$rootScope.currency.factor,2):$rootScope.currency.symbol===Constants.CURRENCY.mBTC?($rootScope.currency.factor=1e3,response=_roundFloat(value*$rootScope.currency.factor,5)):$rootScope.currency.symbol===Constants.CURRENCY.bits?($rootScope.currency.factor=1e6,response=_roundFloat(value*$rootScope.currency.factor,2)):($rootScope.currency.factor=1,response=value),1e-7>response&&(response=response.toFixed(8)),$filter("numeraljs")(response,"0,0[.][00000000]")+" "+$rootScope.currency.symbol}return"value error"},$rootScope.token.convertDecimals=function(amount,decimals){if(!amount)return 0;var valueBN=new BigNumber(amount);return valueBN.dividedBy("1e"+(decimals?decimals:0)).toString(10)},self.setCurrency=function(currency){$rootScope.currency.symbol=Constants.CURRENCY[currency],localStorage.setItem("insight-currency",Constants.CURRENCY[currency]),"USD"===currency?Currency.get({},function(res){$rootScope.currency.factor=$rootScope.currency.bitstamp=res.data.bitstamp}):"mBTC"===currency?$rootScope.currency.factor=1e3:"bits"===currency?$rootScope.currency.factor=1e6:$rootScope.currency.factor=1},Currency.get({},function(res){$rootScope.currency.factor=$rootScope.currency.bitstamp=res.data.bitstamp})}),angular.module("insight.system").controller("FooterController",function($scope,$route,$templateCache,gettextCatalog,amMoment,Version){var _getVersion=function(){Version.get({},function(res){$scope.version=res.version})};$scope.version=_getVersion()}),angular.module("insight.system").controller("HeaderController",function($scope,$rootScope,$route,gettextCatalog,amMoment,getSocket,Block,$templateCache,Constants,$location){function _getMenu(){return[{title:gettextCatalog.getString("Blocks"),link:"blocks",active_part:"/block"},{title:gettextCatalog.getString("Status"),link:"status",active_part:"/status"},{title:gettextCatalog.getString("Stats"),link:"stats",active_part:"/stats"},{title:gettextCatalog.getString("Nodemap"),link:Constants.NODEMAP_LINK,active_part:"/nodemap"},{title:gettextCatalog.getString("Charts"),link:"charts",active_part:"/charts"},{title:gettextCatalog.getString("Tokens"),link:"tokens/search",active_part:"/token"},{title:gettextCatalog.getString("Rich List"),link:"rich-list",active_part:"/rich-list"}]}var self=this,socket=getSocket($scope);self.defaultLanguage=Constants.DEFAULT_LANGUAGE,self.menu=_getMenu(),self.isActiveMenuItem=function(item){return-1!==$location.path().search(item)?"active":""},self.availableLanguages=[{name:gettextCatalog.getString("Deutsch"),isoCode:"de_DE"},{name:gettextCatalog.getString("English"),isoCode:"en"},{name:gettextCatalog.getString("Spanish"),isoCode:"es"},{name:gettextCatalog.getString("Japanese"),isoCode:"ja"}];var _getBlock=function(hash){Block.get({blockHash:hash},function(res){self.totalBlocks=res.height})};socket.on("connect",function(){socket.emit("subscribe","inv"),socket.on("block",function(block){var blockHash=block.toString();_getBlock(blockHash)})}),self.setLanguage=function(isoCode){var currentPageTemplate=$route.current.templateUrl;gettextCatalog.currentLanguage=self.defaultLanguage=isoCode,amMoment.changeLocale(isoCode),localStorage.setItem("insight-language",isoCode),$templateCache.remove(currentPageTemplate),self.menu=_getMenu(),$route.reload()},$rootScope.isCollapsed=!0}),angular.module("insight.system").controller("IndexController",function($scope,$rootScope,$window,$timeout,moment,getSocket,Blocks,TransactionsByDays,Constants,Status,$q,StatisticsTotalSupply,MarketsInfo){var self=this,socket=getSocket($scope);self.blockchainInfo=null,self.marketsInfo={price_usd:0,price_btc:0,market_cap_usd:0},self.txs=[],self.blocks=[],self.chartDays=Constants.CHART_DAYS,self.rewardCurrency=Constants.CURRENCY.LUX,self.scrollConfig={autoHideScrollbar:!1,axis:"y",theme:"custom",advanced:{updateOnContentResize:!0},scrollInertia:0,callbacks:{onBeforeUpdate:function(){var maxHeight=parseInt($window.getComputedStyle(this).maxHeight),list=this.getElementsByClassName("mCSB_container"),heightList=list[0].clientHeight;heightList>maxHeight?this.style.height=maxHeight+"px":this.style.height=heightList+"px"}}},self.chartOptions={series:["Transactions"],datasetOverride:[{yAxisID:"y-axis-1",borderColor:"#ffffff",borderWidth:1,fill:!1,pointBorderColor:"#ffffff",pointBackgroundColor:"#ffffff",pointBorderWidth:1,pointHoverBackgroundColor:"#17a2b8",pointHoverBorderColor:"#17a2b8",pointHoverBorderWidth:1,pointHitRadius:10,pointStyle:"rect",lineTension:0}],options:{tooltips:{backgroundColor:"#ffffff",titleFontFamily:"SimplonMono",titleFontSize:12,titleFontStyle:"500",titleFontColor:"#071434",bodyFontFamily:"SimplonMono",bodyFontSize:12,bodyFontStyle:"400",bodyFontColor:"#071434",caretSize:5,cornerRadius:0,displayColors:!1},scales:{yAxes:[{id:"y-axis-1",type:"linear",display:!0,position:"left",gridLines:{color:"#26475b",drawBorder:!1,drawTicks:!0,offsetGridLines:!0},ticks:{fontColor:"#ffffff",fontFamily:"SimplonMono",fontSize:14,padding:25,callback:function(value){return value+" t"}}}],xAxes:[{gridLines:{color:"#26475b",drawBorder:!1,drawOnChartArea:!1,drawTicks:!0,zeroLineColor:"#26475b"},ticks:{fontColor:"#ffffff",fontSize:10,fontFamily:"SimplonMono"}}]}}};var _getBlocks=function(){Blocks.get({limit:Constants.BLOCKS_DISPLAYED},function(res){self.blocks=res.blocks,self.blocksLength=res.length})},socketRequestTimer=null,_startSocket=function(){socket.emit("subscribe","inv"),socket.on("tx",function(tx){tx.createTime=Date.now(),self.txs.unshift(tx),self.txs.length>Constants.TRANSACTION_DISPLAYED&&(self.txs.length=Constants.TRANSACTION_DISPLAYED)}),socket.on("info",function(data){self.blockchainInfo=data.info,self.blockchainInfo.supply=data.supply,self.blockchainInfo.stakingInfo=data.stakingInfo}),socket.on("block",function(){clearTimeout(socketRequestTimer),socketRequestTimer=setTimeout(function(){_getBlocks()},2e3*Math.random())}),socket.on("markets_info",function(marketsInfo){self.marketsInfo=marketsInfo})};socket.on("connect",function(){_startSocket()}),self.getListOfTransactions=function(){TransactionsByDays.query({days:self.chartDays},function(response){for(;response.length<self.chartDays;)response.push({date:moment().subtract(self.chartDays-(self.chartDays-response.length),"days").format("YYYY-MM-DD"),transaction_count:0});self.lastTransactionsList=response.reverse(),self.chartOptions.labels=self.lastTransactionsList.map(function(item){return moment(item.date).format("MM/DD")}),self.chartOptions.data=[self.lastTransactionsList.map(function(item){return item.transaction_count})]})};var _getInfo=function(){$q.all([Status.get({q:"getInfo"}).$promise,StatisticsTotalSupply.get({format:"object"}).$promise,Status.get({q:"getStakingInfo"}).$promise]).then(function(results){results[0]&&results[1]&&results[2]&&(self.blockchainInfo=results[0].info,self.blockchainInfo.stakingInfo=results[2],self.blockchainInfo.supply=results[1].supply)})},_getMarketsInfo=function(){return MarketsInfo.get({},function(response){response&&(self.marketsInfo=response)})};self.index=function(){_getInfo(),_getMarketsInfo(),_getBlocks(),_startSocket()}}),angular.module("insight.messages").controller("VerifyMessageController",function($scope,$http){$scope.message={address:"",signature:"",message:""},$scope.verification={status:"unverified",result:null,error:null,address:""},$scope.verifiable=function(){return $scope.message.address&&$scope.message.signature&&$scope.message.message},$scope.verify=function(){$scope.verification.status="loading",$scope.verification.address=$scope.message.address,$http.post(window.apiPrefix+"/messages/verify",$scope.message).success(function(data,status,headers,config){return"boolean"!=typeof data.result?($scope.verification.status="error",void($scope.verification.error=null)):($scope.verification.status="verified",void($scope.verification.result=data.result))}).error(function(data,status,headers,config){$scope.verification.status="error",$scope.verification.error=data})};var unverify=function(){$scope.verification.status="unverified"};$scope.$watch("message.address",unverify),$scope.$watch("message.signature",unverify),$scope.$watch("message.message",unverify)}),angular.module("insight.richList").controller("RichListController",function($scope,$routeParams,StatisticsRichestList){var self=this;self.items=[],self.loaded=!1,self.init=function(){StatisticsRichestList.query({},function(items){self.items=items,self.loaded=!0})}}),angular.module("insight.system").controller("ScannerController",function($scope,$rootScope,$modalInstance,Global){$scope.global=Global;var isMobile={Android:function(){return navigator.userAgent.match(/Android/i)},BlackBerry:function(){return navigator.userAgent.match(/BlackBerry/i)},iOS:function(){return navigator.userAgent.match(/iPhone|iPad|iPod/i)},Opera:function(){return navigator.userAgent.match(/Opera Mini/i)},Windows:function(){return navigator.userAgent.match(/IEMobile/i)},any:function(){return isMobile.Android()||isMobile.BlackBerry()||isMobile.iOS()||isMobile.Opera()||isMobile.Windows()}};navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,window.URL=window.URL||window.webkitURL||window.mozURL||window.msURL,$scope.isMobile=isMobile.any(),$scope.scannerLoading=!1;var cameraInput,video,canvas,$video,context,localMediaStream,$searchInput=angular.element(document.getElementById("search")),_scan=function(evt){if($scope.isMobile){$scope.scannerLoading=!0;var files=evt.target.files;if(1===files.length&&0===files[0].type.indexOf("image/")){var file=files[0],reader=new FileReader;reader.onload=function(theFile){return function(e){var mpImg=new MegaPixImage(file);mpImg.render(canvas,{maxWidth:200,maxHeight:200,orientation:6}),setTimeout(function(){qrcode.width=canvas.width,qrcode.height=canvas.height,qrcode.imagedata=context.getImageData(0,0,qrcode.width,qrcode.height);try{qrcode.decode()}catch(e){alert(e)}},1500)}}(file),reader.readAsDataURL(file)}}else{if(localMediaStream){context.drawImage(video,0,0,300,225);try{qrcode.decode()}catch(e){}}setTimeout(_scan,500)}},_successCallback=function(stream){video.src=window.URL&&window.URL.createObjectURL(stream)||stream,localMediaStream=stream,video.play(),setTimeout(_scan,1e3)},_scanStop=function(){$scope.scannerLoading=!1,$modalInstance.close(),$scope.isMobile||(localMediaStream.stop&&localMediaStream.stop(),localMediaStream=null,video.src="")},_videoError=function(err){console.log("Video Error: "+JSON.stringify(err)),_scanStop()};qrcode.callback=function(data){_scanStop();var str=0===data.indexOf("lux:")?data.substring(8):data;console.log("QR code detected: "+str),$searchInput.val(str).triggerHandler("change").triggerHandler("submit")},$scope.cancel=function(){_scanStop()},$modalInstance.opened.then(function(){$rootScope.isCollapsed=!0,setTimeout(function(){canvas=document.getElementById("qr-canvas"),context=canvas.getContext("2d"),$scope.isMobile?(cameraInput=document.getElementById("qrcode-camera"),cameraInput.addEventListener("change",_scan,!1)):(video=document.getElementById("qrcode-scanner-video"),$video=angular.element(video),canvas.width=300,canvas.height=225,context.clearRect(0,0,300,225),navigator.getUserMedia({video:!0},_successCallback,_videoError))},500)})}),angular.module("insight.search").controller("SearchController",function($location,$timeout,Block,Transaction,Address,BlockByHeight,ERC20ContractInfo,Contracts){var self=this;self.loading=!1;var _badQuery=function(){self.badQuery=!0,$timeout(function(){self.badQuery=!1},2e3)},_resetSearch=function(){self.q="",self.loading=!1};self.search=function(){var q=self.q.trim();self.badQuery=!1,self.loading=!0,Block.get({blockHash:q},function(){_resetSearch(),$location.path("block/"+q)},function(){Transaction.get({txId:q},function(){_resetSearch(),$location.path("tx/"+q)},function(){var bitAddress=q;Address.get({addrStr:bitAddress},function(){_resetSearch(),$location.path("address/"+bitAddress)},function(){isFinite(q)?BlockByHeight.get({blockHeight:q},function(hash){_resetSearch(),$location.path("/block/"+hash.blockHash)},function(){self.loading=!1,_badQuery()}):ERC20ContractInfo.get({contractAddress:q},function(){_resetSearch(),$location.path("/token/"+q)},function(){self.loading=!1,_badQuery()})})})})}}),angular.module("insight.transactions").controller("SendRawTransactionController",function($scope,$http,$filter,SendRawTransaction,lodash){var timeoutId=null;$scope.status="ready",$scope.error=null,$scope.isEmpty=!1,$scope.rawTransaction,$scope.txid="",$scope.jqueryScrollbarOptions={},$scope.send=function(){if(clearState(),validateRawTransaction()){var postData={rawtx:$scope.rawTransaction.trim()};SendRawTransaction.send(postData,function(successfullResponse){return"string"!=typeof successfullResponse.txid?($scope.status="error",void($scope.error=": the transaction was sent but no transaction id was got back")):($scope.status="sent",$scope.txid=successfullResponse.txid,void clearDataAfterSuccessfullSend())},function(errorResponse){var data=errorResponse.data;$scope.status="error",data?$scope.error=": "+data:$scope.error="no error message given (connection error?)"})}},$scope.isStatusError=function(){return"error"===$scope.status?!0:!1},$scope.checkIsEmpty=function(){return $scope.isEmpty},$scope.isStatusSent=function(){return"sent"===$scope.status?!0:!1},$scope.$on("$destroy",function(){clearState()});var clearState=function(){$scope.status="ready",$scope.isEmpty=!1,$scope.error=null,$scope.txid="",clearTimeout(timeoutId)},validateRawTransaction=function(){var rawTrx=$scope.rawTransaction;return rawTrx?lodash.isString(rawTrx)&&/^[0-9a-fA-F]+$/.test(rawTrx)?!0:($scope.status="error",$scope.error=": the transaction hex is not valid",!1):($scope.isEmpty=!0,!1)},clearDataAfterSuccessfullSend=function(){$scope.rawTransaction=null,timeoutId=setTimeout(function(){clearState(),$scope.$apply()},12e4)}}),angular.module("insight.statistics").controller("StatisticsController",function($scope,$routeParams,Statistics,StatisticsByDaysTransactions,StatisticsByDaysOutputs,StatisticsByDaysFees,StatisticsByDaysDifficulty,StatisticsByDaysStakes,Statistics24Hours,gettextCatalog,$filter,Constants,StatisticChart,MarketsInfo){var self=this,factories={transactions:{factory:StatisticsByDaysTransactions,field:"transaction_count"},outputs:{factory:StatisticsByDaysOutputs,field:"sum"},fees:{factory:StatisticsByDaysFees,field:"fee"},difficulty:{factory:StatisticsByDaysDifficulty,field:"sum"},stakes:{factory:StatisticsByDaysStakes,field:"sum"}};self.chartText={fees:gettextCatalog.getString("The total value of all transaction fees paid to miners (not including the coinbase value of block rewards)."),transactions:gettextCatalog.getString("The number of daily confirmed LUX transactions."),outputs:gettextCatalog.getString("The total value of all transaction outputs per day (includes coins returned to the sender as change)."),difficulty:gettextCatalog.getString("A relative measure of how difficult it is to find a new block. The difficulty is adjusted periodically as a function of how much hashing power has been deployed by the network of miners."),stakes:gettextCatalog.getString("")},self.chartDays=$routeParams.days,self.chartType=$routeParams.type,self.marketCurrency=Constants.CURRENCY.USD,self.marketPrice=0;var statisticChart=new StatisticChart(self.chartDays);self.chartOptions=statisticChart.chartOptions,self.daysButtons=statisticChart.daysButtons,$scope.$on("chart-create",function(evt,chart){"line"===chart.chart.canvas.id&&(statisticChart.changeChartColor(chart),chart.update())}),self.getDifficulties=function(){statisticChart.load(factories[$routeParams.type].factory,factories[$routeParams.type].field,$routeParams.type)},self.get24HoursStats=function(){Statistics24Hours.get(function(response){self.statsTotal24=response}),MarketsInfo.get({},function(response){response&&response.price_usd&&(self.marketPrice=response.price_usd)})}}),angular.module("insight.status").controller("StatusController",function($scope,Status,Sync,getSocket){var self=this,socket=getSocket($scope);self.getStatus=function(q){Status.get({q:"get"+q},function(d){self.loaded=1,angular.extend(self,d)},function(e){self.error="API ERROR: "+e.data})};var _onSyncUpdate=function(sync){sync.startTs||(sync.startTs=Date.now()),self.sync=sync},_startSocket=function(){socket.emit("subscribe","sync"),socket.on("status",function(sync){_onSyncUpdate(sync)})};socket.on("connect",function(){_startSocket()}),self.getSync=function(){_startSocket(),Sync.get({},function(sync){_onSyncUpdate(sync)},function(e){self.sync={error:"Could not get sync information"+e.toString()}})}}),angular.module("insight.token").controller("TokenController",function($routeParams,$rootScope,$location,ERC20ContractInfo,ERC20Transfers,ERC20AddressBalances,ERC20Holders,ContractsRepository,SolidityCoder,Web3Utils,Contracts,BigNumber){if(!Web3Utils.isAddress($routeParams.address)&&!Contracts.isValidLuxAddress($routeParams.address))return $rootScope.flashMessage="Invalid Address: "+$routeParams.address,$location.path("/e404").replace(),!1;var contractEthAddress=$routeParams.address;if(!Web3Utils.isAddress(contractEthAddress))return contractEthAddress=Contracts.getEthAddressFromBitAddress($routeParams.address),$location.path("/token/"+contractEthAddress).replace(),!1;var self=(Contracts.getBitAddressFromContractAddress($routeParams.address),this),BALANCE_OF_METHOD_HASH="70a08231",ALLOWANCE_METHOD_HASH="dd62ed3e";self.tokenInfo={},self.transfers={},self.holders={},self.filterByAddress=null,$routeParams.a&&(Web3Utils.isAddress($routeParams.a)&&(self.filterByAddress=Contracts.getBitAddressFromContractAddress($routeParams.a)),Contracts.isValidLuxAddress($routeParams.a)&&(self.filterByAddress=$routeParams.a)),self.addressBalance=null,self.readSmartContractTab={balanceOf:{owner_address:"",inProcess:!1,owner_error:"",balance:0,requested_address:"",process_address:""},allowance:{owner_address:"",spender_address:"",inProcess:!1,owner_error:"",spender_error:"",owner_requested_address:"",owner_process_address:"",spender_requested_address:"",spender_process_address:""}},self.contractAddress=$routeParams.address,self.tab=$routeParams.tab&&-1!==["transfers","holders","read-smart-contract"].indexOf($routeParams.tab)?$routeParams.tab:"transfers";var _loadTabContent=function(offset){switch(self.tab){case"transfers":_getTransfers(offset?offset:0);break;case"holders":_getHolders(offset?offset:0);break;case"read-smart-contract":}};self.getPercent=function(total,amount){var amountBN=new BigNumber(amount);return amountBN.dividedBy(total).mul(100).toString(10)};var _getTransfers=function(offset){ERC20Transfers.get({address:contractEthAddress,offset:offset,"addresses[]":self.filterByAddress?self.filterByAddress:null}).$promise.then(function(trList){self.transfers=trList,self.transfers.pages=self.transfers.count&&self.transfers.limit?Math.ceil(self.transfers.count/self.transfers.limit):0})},_getHolders=function(offset){
return ERC20Holders.get({address:contractEthAddress,offset:offset}).$promise.then(function(holderList){self.holders=holderList,self.holders.pages=self.holders.count&&self.holders.limit?Math.ceil(self.holders.count/self.holders.limit):0})},_loadTokenInfo=function(){ERC20ContractInfo.get({contractAddress:contractEthAddress,address:self.filterByAddress?self.filterByAddress:null},function(info){if(info){self.tokenInfo=info;try{self.tokenInfo.contract_address_base=Contracts.getBitAddressFromContractAddress(self.tokenInfo.contract_address)}catch(e){console.log("Error convert",self.tokenInfo)}}}),self.filterByAddress&&ERC20AddressBalances.get({contractAddress:contractEthAddress,balanceAddress:self.filterByAddress}).$promise.then(function(balance){self.addressBalance=balance})["catch"](function(err){console.log(err)})};self.init=function(){_loadTokenInfo(),_loadTabContent()},self.paginate=function(offset){self[self.tab].limit&&self[self.tab].pages>offset/self[self.tab].limit&&offset>=0&&self[self.tab].offset!==offset&&_loadTabContent(offset)},self.setTab=function(tabName){self.tab!==tabName&&(self.tab=tabName,$location.path("/token/"+$routeParams.address+"/"+tabName,!1),_loadTabContent())};var getEthConvertedAddress=function(address){try{if(Contracts.isValidLuxAddress(address)){var ethAddress=Contracts.getEthAddressFromBitAddress(address);if(ethAddress)return ethAddress}if(address=address.toLowerCase(),Web3Utils.isAddress(address))return address}catch(e){console.log(e)}return null};self.getAddressBalance=function(){var balanceOfData=self.readSmartContractTab.balanceOf;if(balanceOfData.inProcess)return!1;var userAddress=balanceOfData.owner_address,processAddress=getEthConvertedAddress(userAddress);return processAddress?(balanceOfData.owner_error="",balanceOfData.inProcess=!0,ContractsRepository.call.get({address:contractEthAddress,hash:BALANCE_OF_METHOD_HASH+SolidityCoder.encodeParam("address",Web3Utils.toAddress(processAddress))}).$promise.then(function(info){if(balanceOfData.requested_address=userAddress,balanceOfData.process_address=processAddress,balanceOfData.owner_address="",balanceOfData.inProcess=!1,info&&info.executionResult)try{var decodedBalance=SolidityCoder.decodeParam("uint256",info.executionResult.output);balanceOfData.balance=decodedBalance.toString(10)}catch(e){balanceOfData.balance=0}})):(balanceOfData.owner_error="Invalid address",!1)},self.getAllowanceAmount=function(){var allowanceData=self.readSmartContractTab.allowance;if(allowanceData.inProcess)return!1;var userOwnerAddress=allowanceData.owner_address,processOwnerAddress=getEthConvertedAddress(userOwnerAddress);if(!processOwnerAddress)return allowanceData.owner_error="Invalid address",!1;allowanceData.owner_error="";var userSpenderAddress=allowanceData.spender_address,processSpenderAddress=getEthConvertedAddress(userSpenderAddress);return processSpenderAddress?(allowanceData.spender_error="",allowanceData.inProcess=!1,ContractsRepository.call.get({address:contractEthAddress,hash:ALLOWANCE_METHOD_HASH+SolidityCoder.encodeParam("address",Web3Utils.toAddress(processOwnerAddress))+SolidityCoder.encodeParam("address",Web3Utils.toAddress(processSpenderAddress))}).$promise.then(function(info){if(allowanceData.owner_requested_address=allowanceData.owner_address,allowanceData.owner_process_address=processOwnerAddress,allowanceData.spender_requested_address=allowanceData.spender_address,allowanceData.spender_process_address=processSpenderAddress,allowanceData.owner_address="",allowanceData.spender_address="",allowanceData.inProcess=!1,info.executionResult)try{var decodedBalance=SolidityCoder.decodeParam("uint256",info.executionResult.output);allowanceData.balance=decodedBalance.toString(10)}catch(e){allowanceData.balance=0}})):(allowanceData.spender_error="Invalid address",!1)},self.paginateData={transfers:{paginate_has_error:!1,paginate_page:""},holders:{paginate_has_error:!1,paginate_page:""}},self.setPaginateError=function(hasError){self.paginateData[self.tab].paginate_has_error=hasError},self.resetPaginate=function(){self.paginateData[self.tab].paginate_has_error=!1,self.paginateData[self.tab].paginate_page=""},self.changePage=function(e){var countPages=self[self.tab].count&&self[self.tab].limit?Math.ceil(self[self.tab].count/self[self.tab].limit):0,value=e.target.value;return/^\d+$/.test(value)?(value=parseInt(e.target.value,10),void(value&&!isNaN(value)&&countPages>=value?(self.paginate(self[self.tab].limit*(value-1)),this.resetPaginate()):self.setPaginateError(!0))):self.setPaginateError(!0)}}),angular.module("insight.system").controller("TokensSearchController",function($scope,$rootScope,$route,gettextCatalog,ContractsRepository,lodash){var self=this;self.init=function(){getContractsList()};var currentRequestUniqueId,getDefaultSearchResult=function(){return{count:0,items:[]}};self.query="",self.error="",self.inProcess=!1,self.searchResult=getDefaultSearchResult(),self.contractsList=[];var getContractsList=function(){ContractsRepository.contractsList.get({},function(res){if(res&&res.count&&res.items){var transformedItems=[];res.items.forEach(function(item){item.exception||!item.name&&!item.symbol||transformedItems.push(item)}),self.contractsList=_.sortBy(transformedItems,function(item){return-item.count_holders})}})},debounced=lodash.debounce(function(requestId){return currentRequestUniqueId!==requestId?!1:void ContractsRepository.search.get({query:lodash.trim(self.query)},function(res){self.inProcess=!1,currentRequestUniqueId===requestId&&(self.searchResult=res)},function(){self.error="Request Error!"})},550);self.search=function(){lodash.trim(self.query)?self.inProcess||self.changeQuery():self.error="Search field is required!"},self.reset=function(){currentRequestUniqueId=lodash.uniqueId(),self.query="",self.searchResult={count:0,items:[]}},self.changeQuery=function(){self.error="",self.inProcess=!0,currentRequestUniqueId=lodash.uniqueId(),_.trim(self.query)?debounced(currentRequestUniqueId):(self.reset(),self.inProcess=!1)}}),angular.module("insight.transactions").controller("TransactionsController",function($scope,$rootScope,$routeParams,$location,Transaction,TransactionsByBlock,TransactionsByAddress,Contracts,$q,ERC20ContractInfo,Web3Utils){var self=this,pageNum=0,pagesTotal=1,COIN=1e8;self.loading=!1,self.loadedBy=null,self.isCopied=!1,self.scrollConfig={autoHideScrollbar:!1,theme:"custom",advanced:{updateOnContentResize:!0},scrollInertia:0};var _aggregateItems=function(txId,items){if(!items)return[];for(var l=items.length,ret=[],tmp={},u=0,i=0;l>i;i++){var notAddr=!1;if(items[i].scriptSig&&!items[i].addr&&(items[i].addr="Unparsed address ["+u++ +"]",items[i].notAddr=!0,notAddr=!0),items[i].scriptPubKey&&!items[i].scriptPubKey.addresses){var contractAddress;items[i].scriptPubKey.hex&&(contractAddress=Contracts.getContractAddressByHex(txId,items[i].n,items[i].scriptPubKey.hex)),contractAddress&&(items[i].contractAddress=contractAddress,items[i].contractAddressBit=Contracts.getBitAddressFromContractAddress(contractAddress)),items[i].scriptPubKey.addresses=["Unparsed address ["+u++ +"]"],items[i].notAddr=!0,notAddr=!0}if(items[i].scriptPubKey&&items[i].scriptPubKey.addresses.length>1)items[i].addr=items[i].scriptPubKey.addresses.join(","),ret.push(items[i]);else{var addr=items[i].addr||items[i].scriptPubKey&&items[i].scriptPubKey.addresses[0];tmp[addr]||(tmp[addr]={},tmp[addr].valueSat=0,tmp[addr].count=0,tmp[addr].addr=addr,tmp[addr].items=[]),tmp[addr].isSpent=items[i].spentTxId,tmp[addr].doubleSpentTxID=tmp[addr].doubleSpentTxID||items[i].doubleSpentTxID,tmp[addr].doubleSpentIndex=tmp[addr].doubleSpentIndex||items[i].doubleSpentIndex,tmp[addr].dbError=tmp[addr].dbError||items[i].dbError,tmp[addr].valueSat+=Math.round(items[i].value*COIN),tmp[addr].items.push(items[i]),tmp[addr].notAddr=notAddr,tmp[addr].contractAddress=items[i].contractAddress||null,tmp[addr].contractAddressBit=items[i].contractAddressBit||null,items[i].unconfirmedInput&&(tmp[addr].unconfirmedInput=!0),tmp[addr].count++}}return angular.forEach(tmp,function(v){v.value=v.value||parseInt(v.valueSat)/COIN,ret.push(v)}),ret},_getContractBytecode=function(tx){for(var items=tx.vout,l=items.length,i=0;l>i;i++)if(items[i].scriptPubKey&&items[i].scriptPubKey.hex){var bytecode=Contracts.getContractBytecode(items[i].scriptPubKey.hex);if(bytecode)return bytecode}return null},contractsInfoCache={},addEvent=function(tx,logItem){return $q(function(resolve){contractsInfoCache[logItem.address]||(contractsInfoCache[logItem.address]=ERC20ContractInfo.get({contractAddress:logItem.address})),contractsInfoCache[logItem.address].$promise.then(function(data){if(data&&data.contract_address){var addressFrom=logItem.topics[1],addressTo=logItem.topics[2],amount=parseInt(logItem.data,16),tokenEvent={addressFrom:Contracts.getBitAddressFromContractAddress(addressFrom.slice(addressFrom.length-40,addressFrom.length)),addressTo:Contracts.getBitAddressFromContractAddress(addressTo.slice(addressTo.length-40,addressTo.length)),amount:amount,contractInfo:data};tx.tokenEvents.push(tokenEvent)}return resolve()})["catch"](function(){return resolve()})})},asyncProcessERC20TX=function(tx){var deferred=$q.defer(),tokenPromises=[];if(tx.tokenEvents=[],tx.isqrc20Transfer&&tx.receipt&&tx.receipt.length)for(var i=0;i<tx.receipt.length;i++){var receiptItem=tx.receipt[i];if(receiptItem&&receiptItem.log&&receiptItem.log.length)for(var j=0;j<receiptItem.log.length;j++){var logItem=receiptItem.log[j];logItem&&logItem.topics&&3===logItem.topics.length&&"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"===logItem.topics[0]&&tokenPromises.push(addEvent(tx,logItem))}}return $q.all(tokenPromises).then(function(){deferred.resolve(tx)}),deferred.promise},_processTX=function(tx){var contractBytecodeInfo=_getContractBytecode(tx);tx.vinSimple=_aggregateItems(tx.txid,tx.vin),tx.voutSimple=_aggregateItems(tx.txid,tx.vout),self.loading=!1,contractBytecodeInfo&&(tx.contractBytecode=contractBytecodeInfo.code,tx.contractBytecodeType=contractBytecodeInfo.type,tx.contractAsm=Contracts.getContractOpcodesString(tx.contractBytecode))},_paginate=function(data){pagesTotal=data.pagesTotal,pageNum+=1;var promises=[];data.txs.forEach(function(tx){promises.push(asyncProcessERC20TX(tx))}),$q.all(promises).then(function(results){results.forEach(function(tx){tx.showAdditInfo=!1,_processTX(tx),self.txs.push(tx)}),self.loading=!1})},_byBlock=function(){TransactionsByBlock.get({block:$routeParams.blockHash,pageNum:pageNum},function(data){_paginate(data)})},_byAddress=function(){var address=$routeParams.addrStr;Web3Utils.isAddress(address)&&(address=Contracts.getBitAddressFromContractAddress(address)),TransactionsByAddress.get({address:address,pageNum:pageNum},function(data){_paginate(data)})},_byContractAddress=function(){TransactionsByAddress.get({address:Contracts.getBitAddressFromContractAddress($routeParams.contractAddressStr),pageNum:pageNum},function(data){_paginate(data)})},_findTx=function(txid){Transaction.get({txId:txid},function(tx){$rootScope.titleDetail=tx.txid.substring(0,7)+"...",$rootScope.flashMessage=null,asyncProcessERC20TX(tx).then(function(tx){self.tx=tx,_processTX(tx),self.txs.unshift(tx)})},function(e){400===e.status?$rootScope.flashMessage="Invalid Transaction ID: "+$routeParams.txId:503===e.status?$rootScope.flashMessage="Backend Error. "+e.data:$rootScope.flashMessage="Transaction Not Found",$location.path("/")})};self.findThis=function(){self.loading=!0,_findTx($routeParams.txId)},self.load=function(from){self.loadedBy=from,self.loadMore()},self.loadMore=function(){if(pagesTotal>pageNum&&!self.loading)switch(self.loading=!0,self.loadedBy){case"address":_byAddress();break;case"contractAddress":_byContractAddress();break;default:_byBlock()}},(">"==$routeParams.v_type||"<"==$routeParams.v_type)&&(self.from_vin="<"==$routeParams.v_type?!0:!1,self.from_vout=">"==$routeParams.v_type?!0:!1,self.v_index=parseInt($routeParams.v_index),self.itemsExpanded=!0),self.txs=[],$scope.$on("tx",function(event,txid){_findTx(txid)})}),angular.module("insight.address").factory("Address",function($resource,$window){return $resource($window.apiPrefix+"/addr/:addrStr/?noTxList=1",{addrStr:"@addStr"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){return 404===res.status?res:void 0}}}})}),angular.module("insight.bignumber").factory("BigNumber",function($window){return $window.eth_libs.BigNumber}),angular.module("insight.luxcorelib").factory("LuxCoreLib",function(){var LuxCoreLib=require("luxcore-lib");return LuxCoreLib}),angular.module("insight.blocks").factory("Block",function($resource){return $resource(window.apiPrefix+"/block/:blockHash",{blockHash:"@blockHash"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){return 404===res.status?res:void 0}}}})}).factory("Blocks",function($resource){return $resource(window.apiPrefix+"/blocks")}).factory("BlockByHeight",function($resource){return $resource(window.apiPrefix+"/block-index/:blockHeight")}),angular.module("insight.chart").factory("StatisticChart",function(gettextCatalog,$filter){function StatisticChart(days){this.days=days,this.chartOptions={series:["Test"],datasetOverride:[{defaultFontFamily:"SimplonMono",yAxisID:"y-axis-1",borderColor:"#ffffff",borderWidth:1,pointBorderColor:"#ffffff",pointBackgroundColor:"#ffffff",pointBorderWidth:0,pointRadius:0,pointHoverBackgroundColor:"#17a2b8",pointHoverBorderColor:"#17a2b8",pointHoverBorderWidth:1,pointHitRadius:10,pointStyle:"rect",lineTension:0}],options:{tooltips:{backgroundColor:"#ffffff",titleFontFamily:"SimplonMono",titleFontSize:12,titleFontStyle:"500",titleFontColor:"#071434",bodyFontFamily:"SimplonMono",bodyFontSize:12,bodyFontStyle:"400",bodyFontColor:"#071434",caretSize:5,cornerRadius:3,displayColors:!1,callbacks:{}},layout:{padding:{left:25}},scales:{yAxes:[{id:"y-axis-1",type:"linear",display:!0,position:"left",gridLines:{color:"#26475b",drawBorder:!1,offsetGridLines:!0,zeroLineColor:"#26475b"},ticks:{fontColor:"#ffffff",fontFamily:"SimplonMono",fontSize:14,padding:20}}],xAxes:[{type:"time",time:{unit:days>60||"all"==days?"month":"day",displayFormats:{month:"MMM'DD",day:"MMM'DD"},max:Date.now()},gridLines:{color:"#26475b",drawBorder:!1,drawOnChartArea:!1,drawTicks:!0,zeroLineColor:"#26475b"},ticks:{fontColor:"#ffffff",fontSize:10,fontFamily:"SimplonMono"}}]}}},this.daysButtons=[{days:30,name:"30 "+gettextCatalog.getString("Days")},{days:60,name:"60 "+gettextCatalog.getString("Days")},{days:180,name:"180 "+gettextCatalog.getString("Days")},{days:365,name:"1 "+gettextCatalog.getString("Year")},{days:730,name:"2 "+gettextCatalog.getString("Years")},{days:"all",name:gettextCatalog.getString("All Time")}],this.chartStats=[]}return StatisticChart.prototype.changeChartColor=function(chart){var ctx=chart.chart.ctx,gradient=ctx.createLinearGradient(0,0,0,600);gradient.addColorStop(0,"rgba(46, 154, 208,0.5)"),gradient.addColorStop(1,"rgba(0, 0, 0,0.001)"),chart.chart.config.data.datasets[0].backgroundColor=gradient},StatisticChart.prototype.load=function(factory,itemField,itemName,fill){var self=this;factory.query({days:self.days},function(response){if(fill)for(;response.length<self.days;){var emptyItem={};emptyItem.date=moment().subtract(self.days-(self.days-response.length),"days").format("YYYY-MM-DD"),emptyItem[itemField]=0,response.push(emptyItem)}response.reverse(),self.chartOptions.labels=response.map(function(item){return item.date}),self.chartOptions.data=response.map(function(item){return item[itemField]}),self.chartOptions.options.scales.yAxes[0].ticks.callback=function(value){return value>999?$filter("numeraljs")(value,"0,0"):parseFloat(value.toFixed(6))},self.chartOptions.series=[itemName],self.chartOptions.options.tooltips.callbacks.beforeTitle=function(text){text[0].yLabel=itemName.charAt(0).toUpperCase()+itemName.substr(1)+": "+$filter("numeraljs")(text[0].yLabel,"0,0.[00000000]")},self.chartStats=response})},StatisticChart}),angular.module("insight.contracts").factory("ContractsInfo",function($resource){return $resource(window.apiPrefix+"/contracts/:contractAddressStr/info")}).factory("Contracts",function(LuxCoreLib,Opcodes,Networks,Constants){var CONTRACT_CALL=194,CONTRACT_CREATE=193;return{isValidLuxAddress:function(address){return LuxCoreLib.Address.isValid(address,Constants.NETWORK)},getBitAddressFromContractAddress:function(contractAddress){try{var network=Networks.getCurrentNetwork(),networkId=network.pubkeyhash.toString(16),checksum=LuxCoreLib.crypto.Hash.sha256sha256(new LuxCoreLib.deps.Buffer(networkId+contractAddress,"hex")),hexBitAddress=networkId+contractAddress+checksum.toString("hex").slice(0,8);return LuxCoreLib.encoding.Base58.encode(new LuxCoreLib.deps.Buffer(hexBitAddress,"hex"))}catch(e){return null}},getEthAddressFromBitAddress:function(bitAddress){try{var network=Networks.getCurrentNetwork(),networkId=network.pubkeyhash.toString(16),hexBitAddress=LuxCoreLib.encoding.Base58.decode(bitAddress).toString("hex");return hexBitAddress.slice(0,2)!==networkId?null:hexBitAddress.slice(2,-8)}catch(e){return null}},getContractOpcodesString:function(hex){for(var contractCode=new LuxCoreLib.deps.Buffer(hex,"hex"),ops=[],index=0;index<contractCode.length;index++){var currentOp=Opcodes.lookupOpcode(contractCode[index],!0);if(currentOp.pc=index,ops.push(currentOp),"PUSH"===currentOp.name.slice(0,4)){var pushDataLength=contractCode[index]-95,pushData=contractCode.slice(index+1,index+pushDataLength+1);currentOp.pushData=pushData,index+=pushDataLength}}for(var opcodesStr="",i=0;i<ops.length;i++)opcodesStr+=ops[i].pushData?" "+ops[i].name+(ops[i].pushData?" 0x"+ops[i].pushData.toString("hex"):""):" "+ops[i].name;return opcodesStr},getContractBytecode:function(hex){try{var script=LuxCoreLib.Script(hex);if(script.chunks&&script.chunks.length)for(var k=0;k<script.chunks.length;k++)if(script.chunks[k]&&script.chunks[k].opcodenum&&-1!==[CONTRACT_CALL,CONTRACT_CREATE].indexOf(script.chunks[k].opcodenum))switch(script.chunks[k].opcodenum){case CONTRACT_CALL:return{code:script.chunks[k-2].buf.toString("hex"),type:"Call"};case CONTRACT_CREATE:return{code:script.chunks[k-1].buf.toString("hex"),type:"Create"}}}catch(e){}return null},getContractAddressByHex:function(txid,voutNum,hex){try{var script=LuxCoreLib.Script(hex);if(script.chunks&&script.chunks.length)for(var k=0;k<script.chunks.length;k++)if(script.chunks[k]&&script.chunks[k].opcodenum&&-1!==[CONTRACT_CALL,CONTRACT_CREATE].indexOf(script.chunks[k].opcodenum))switch(script.chunks[k].opcodenum){case CONTRACT_CALL:case CONTRACT_CREATE:return this.getContractAddress(txid,voutNum)}}catch(e){}return null},getContractAddress:function(txId,num){var reverseTxId=txId.match(/.{2}/g).reverse().join(""),buf=new LuxCoreLib.deps.Buffer(4);buf.writeUInt32LE(num,0);var nHex=buf.toString("hex"),addr=reverseTxId+nHex,bufferAddress=LuxCoreLib.crypto.Hash.sha256ripemd160(new LuxCoreLib.deps.Buffer(addr,"hex"));return bufferAddress.toString("hex")}}}).factory("StorageByAddress",function($resource,$window){return $resource($window.apiPrefix+"/contracts/:address/info",{address:"@address"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){return 404===res.status?res:void 0}}}})}).factory("ERC20ContractInfo",function($resource,$window){return $resource($window.apiPrefix+"/qrc20/:contractAddress",{address:"@address"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){return 404===res.status?res:void 0}}}})}).factory("ERC20Transfers",function($resource,$window){return $resource($window.apiPrefix+"/erc20/:address/transfers",{limit:20,offset:"@offset",addresses:"@addresses"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){return 404===res.status?res:void 0}}}})}).factory("ERC20AddressBalances",function($resource,$window){return $resource($window.apiPrefix+"/erc20/balances",{balanceAddress:"@balanceAddress",contractAddress:"@contractAddress"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){return 404===res.status?res:void 0}}}})}).factory("ERC20Holders",function($resource,$window){return $resource($window.apiPrefix+"/erc20/:address/balances",{limit:20,offset:"@offset"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){return 404===res.status?res:void 0}}}})}).factory("ContractsRepository",function($resource,$window){return{call:$resource($window.apiPrefix+"/contracts/:address/hash/:hash/call",{address:"@address",hash:"@hash"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){return 404===res.status?res:void 0}}}}),search:$resource($window.apiPrefix+"/erc20/search",{query:"@query"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){return 404===res.status?res:void 0}}}}),contractsList:$resource($window.apiPrefix+"/tokens",{},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){return 404===res.status?res:void 0}}}})}}),angular.module("insight.currency").factory("Currency",function($resource){return $resource(window.apiPrefix+"/currency")}),angular.module("insight.system").factory("Global",[function(){}]).factory("Version",function($resource){return $resource(window.apiPrefix+"/version")}),angular.module("insight.markets").factory("MarketsInfo",function($resource){return $resource(window.apiPrefix+"/markets/info",{q:"@q"})}),angular.module("insight.networks").factory("Networks",function(Constants,LuxCoreLib){return{getCurrentNetwork:function(){return LuxCoreLib.Networks.get(Constants.NETWORK)}}}),angular.module("insight.opcodes").factory("Opcodes",function(){var codes={0:["STOP",0,0,0,!1],1:["ADD",3,2,1,!1],2:["MUL",5,2,1,!1],3:["SUB",3,2,1,!1],4:["DIV",5,2,1,!1],5:["SDIV",5,2,1,!1],6:["MOD",5,2,1,!1],7:["SMOD",5,2,1,!1],8:["ADDMOD",8,3,1,!1],9:["MULMOD",8,3,1,!1],10:["EXP",10,2,1,!1],11:["SIGNEXTEND",5,1,1,!1],16:["LT",3,2,1,!1],17:["GT",3,2,1,!1],18:["SLT",3,2,1,!1],19:["SGT",3,2,1,!1],20:["EQ",3,2,1,!1],21:["ISZERO",3,1,1,!1],22:["AND",3,2,1,!1],23:["OR",3,2,1,!1],24:["XOR",3,2,1,!1],25:["NOT",3,1,1,!1],26:["BYTE",3,2,1,!1],32:["SHA3",30,2,1,!1],48:["ADDRESS",2,0,1,!0],49:["BALANCE",20,1,1,!0],50:["ORIGIN",2,0,1,!0],51:["CALLER",2,0,1,!0],52:["CALLVALUE",2,0,1,!0],53:["CALLDATALOAD",3,1,1,!0],54:["CALLDATASIZE",2,0,1,!0],55:["CALLDATACOPY",3,3,0,!0],56:["CODESIZE",2,0,1,!1],57:["CODECOPY",3,3,0,!1],58:["GASPRICE",2,0,1,!1],59:["EXTCODESIZE",20,1,1,!0],60:["EXTCODECOPY",20,4,0,!0],64:["BLOCKHASH",20,1,1,!0],65:["COINBASE",2,0,1,!0],66:["TIMESTAMP",2,0,1,!0],67:["NUMBER",2,0,1,!0],68:["DIFFICULTY",2,0,1,!0],69:["GASLIMIT",2,0,1,!0],80:["POP",2,1,0,!1],81:["MLOAD",3,1,1,!1],82:["MSTORE",3,2,0,!1],83:["MSTORE8",3,2,0,!1],84:["SLOAD",50,1,1,!0],85:["SSTORE",0,2,0,!0],86:["JUMP",8,1,0,!1],87:["JUMPI",10,2,0,!1],88:["PC",2,0,1,!1],89:["MSIZE",2,0,1,!1],90:["GAS",2,0,1,!1],91:["JUMPDEST",1,0,0,!1],96:["PUSH",3,0,1,!1],97:["PUSH",3,0,1,!1],98:["PUSH",3,0,1,!1],99:["PUSH",3,0,1,!1],100:["PUSH",3,0,1,!1],101:["PUSH",3,0,1,!1],102:["PUSH",3,0,1,!1],103:["PUSH",3,0,1,!1],104:["PUSH",3,0,1,!1],105:["PUSH",3,0,1,!1],106:["PUSH",3,0,1,!1],107:["PUSH",3,0,1,!1],108:["PUSH",3,0,1,!1],109:["PUSH",3,0,1,!1],110:["PUSH",3,0,1,!1],111:["PUSH",3,0,1,!1],112:["PUSH",3,0,1,!1],113:["PUSH",3,0,1,!1],114:["PUSH",3,0,1,!1],115:["PUSH",3,0,1,!1],116:["PUSH",3,0,1,!1],117:["PUSH",3,0,1,!1],118:["PUSH",3,0,1,!1],119:["PUSH",3,0,1,!1],120:["PUSH",3,0,1,!1],121:["PUSH",3,0,1,!1],122:["PUSH",3,0,1,!1],123:["PUSH",3,0,1,!1],124:["PUSH",3,0,1,!1],125:["PUSH",3,0,1,!1],126:["PUSH",3,0,1,!1],127:["PUSH",3,0,1,!1],128:["DUP",3,0,1,!1],129:["DUP",3,0,1,!1],130:["DUP",3,0,1,!1],131:["DUP",3,0,1,!1],132:["DUP",3,0,1,!1],133:["DUP",3,0,1,!1],134:["DUP",3,0,1,!1],135:["DUP",3,0,1,!1],136:["DUP",3,0,1,!1],137:["DUP",3,0,1,!1],138:["DUP",3,0,1,!1],139:["DUP",3,0,1,!1],140:["DUP",3,0,1,!1],141:["DUP",3,0,1,!1],142:["DUP",3,0,1,!1],143:["DUP",3,0,1,!1],144:["SWAP",3,0,0,!1],145:["SWAP",3,0,0,!1],146:["SWAP",3,0,0,!1],147:["SWAP",3,0,0,!1],148:["SWAP",3,0,0,!1],149:["SWAP",3,0,0,!1],150:["SWAP",3,0,0,!1],151:["SWAP",3,0,0,!1],152:["SWAP",3,0,0,!1],153:["SWAP",3,0,0,!1],154:["SWAP",3,0,0,!1],155:["SWAP",3,0,0,!1],156:["SWAP",3,0,0,!1],157:["SWAP",3,0,0,!1],158:["SWAP",3,0,0,!1],159:["SWAP",3,0,0,!1],160:["LOG",375,2,0,!1],161:["LOG",375,3,0,!1],162:["LOG",375,4,0,!1],163:["LOG",375,5,0,!1],164:["LOG",375,6,0,!1],240:["CREATE",32e3,3,1,!0],241:["CALL",40,7,1,!0],242:["CALLCODE",40,7,1,!0],243:["RETURN",0,2,0,!1],244:["DELEGATECALL",40,6,1,!0],255:["SUICIDE",0,1,0,!1]};return{lookupOpcode:function(op,full){var code=codes[op]?codes[op]:["INVALID",0],opcode=code[0];return full&&("LOG"===opcode&&(opcode+=op-160),"PUSH"===opcode&&(opcode+=op-95),"DUP"===opcode&&(opcode+=op-127),"SWAP"===opcode&&(opcode+=op-143)),{name:opcode,fee:code[1],"in":code[2],out:code[3],dynamic:code[4]}}}});var ScopedSocket=function(socket,$rootScope){this.socket=socket,this.$rootScope=$rootScope,this.listeners=[]};ScopedSocket.prototype.removeAllListeners=function(opts){opts||(opts={});for(var i=0;i<this.listeners.length;i++){var details=this.listeners[i];opts.skipConnect&&"connect"===details.event||this.socket.removeListener(details.event,details.fn)}this.listeners=[]},ScopedSocket.prototype.on=function(event,callback){var socket=this.socket,$rootScope=this.$rootScope,wrapped_callback=function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})};socket.on(event,wrapped_callback),this.listeners.push({event:event,fn:wrapped_callback})},ScopedSocket.prototype.emit=function(event,data,callback){var socket=this.socket,$rootScope=this.$rootScope,args=Array.prototype.slice.call(arguments);args.push(function(){var args=arguments;$rootScope.$apply(function(){callback&&callback.apply(socket,args)})}),socket.emit.apply(socket,args)},angular.module("insight.socket").factory("getSocket",function($rootScope){var socket=io.connect(window.socketUrl?window.socketUrl:null,{reconnect:!0,"reconnection delay":500});return function(scope){var scopedSocket=new ScopedSocket(socket,$rootScope);return scope.$on("$destroy",function(){scopedSocket.removeAllListeners()}),socket.on("connect",function(){scopedSocket.removeAllListeners({skipConnect:!0})}),scopedSocket}}),angular.module("insight.solidity_coder").factory("SolidityCoder",function($window){return $window.eth_libs.solidity_coder}),angular.module("insight.statistics").factory("Statistics",function($resource,$window){return $resource($window.apiPrefix+"/stats",{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){return 404===res.status?res:void 0}}}})}).factory("StatisticsByDaysTransactions",function($resource,$window){return $resource($window.apiPrefix+"/statistics/transactions",{days:"@days"})}).factory("StatisticsByDaysFees",function($resource,$window){return $resource($window.apiPrefix+"/statistics/fees",{days:"@days"})}).factory("StatisticsByDaysOutputs",function($resource,$window){return $resource($window.apiPrefix+"/statistics/outputs",{days:"@days"})}).factory("StatisticsByDaysDifficulty",function($resource,$window){return $resource($window.apiPrefix+"/statistics/difficulty",{days:"@days"})}).factory("StatisticsByDaysStakes",function($resource,$window){return $resource($window.apiPrefix+"/statistics/stake",{days:"@days"})}).factory("StatisticsByDaysSupply",function($resource,$window){return $resource($window.apiPrefix+"/statistics/supply",{days:"@days"})}).factory("Statistics24Hours",function($resource,$window){return $resource($window.apiPrefix+"/statistics/total")}).factory("StatisticsTotalSupply",function($resource,$window){return $resource($window.apiPrefix+"/statistics/total-supply",{format:"@format"})}).factory("StatisticsBalanceIntervals",function($resource,$window){return $resource($window.apiPrefix+"/statistics/balance-intervals")}).factory("StatisticsRicherThan",function($resource,$window){return $resource($window.apiPrefix+"/statistics/richer-than")}).factory("StatisticsRichestList",function($resource,$window){return $resource($window.apiPrefix+"/statistics/richest-addresses-list")}),angular.module("insight.status").factory("Status",function($resource){return $resource(window.apiPrefix+"/status",{q:"@q"})}).factory("Sync",function($resource){return $resource(window.apiPrefix+"/sync")}).factory("PeerSync",function($resource){return $resource(window.apiPrefix+"/peer")}),angular.module("insight.transactions").factory("Transaction",function($resource,$window){return $resource($window.apiPrefix+"/tx/:txId",{txId:"@txId"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){return 404===res.status?res:void 0}}}})}).factory("TransactionsByBlock",function($resource,$window){return $resource($window.apiPrefix+"/txs",{block:"@block"})}).factory("TransactionsByAddress",function($resource,$window){return $resource($window.apiPrefix+"/txs",{address:"@address"})}).factory("Transactions",function($resource,$window){return $resource($window.apiPrefix+"/txs")}).factory("TransactionsByDays",function($resource,$window){return $resource($window.apiPrefix+"/statistics/transactions",{days:"@days"})}).factory("SendRawTransaction",function($resource,$window){return $resource($window.apiPrefix+"/tx/send",{},{send:{method:"POST",interceptor:{response:function(res){return res.data},responseError:function(res){return res.data}}}})}),angular.module("insight.web3_utils").factory("Web3Utils",function($window){return $window.eth_libs.utils}),angular.module("insight").directive("scroll",function($window){return function(scope,element,attrs){angular.element($window).bind("scroll",function(){this.pageYOffset>=200?scope.secondaryNavbar=!0:scope.secondaryNavbar=!1,scope.$apply()})}}).directive("whenScrolled",function($window){return{restric:"A",link:function(scope,elm,attr){var pageHeight,clientHeight,scrollPos;$window=angular.element($window);var handler=function(){pageHeight=window.document.documentElement.scrollHeight,clientHeight=window.document.documentElement.clientHeight,scrollPos=window.pageYOffset,pageHeight-(scrollPos+clientHeight)===0&&scope.$apply(attr.whenScrolled)};$window.on("scroll",handler),scope.$on("$destroy",function(){return $window.off("scroll",handler)})}}}).directive("focus",function($timeout){return{scope:{trigger:"@focus"},link:function(scope,element){scope.$watch("trigger",function(value){"true"===value&&$timeout(function(){element[0].focus()})})}}}).directive("ngclipboard",["$timeout","$window","gettextCatalog",function($timeout,$window,gettextCatalog){return{restrict:"A",scope:{ngclipboardSuccess:"&",ngclipboardError:"&"},transclude:!0,link:function(scope,element){var clipboard=new $window.Clipboard(element[0]),translate=gettextCatalog.getString("Copied"),copiedElement=angular.element('<div class="copied">'+translate+"</div>");element.before(copiedElement),clipboard.on("success",function(e){scope.$apply(function(){copiedElement.addClass("active"),$timeout(function(){copiedElement.removeClass("active")},2e3),scope.ngclipboardSuccess({e:e})})}),clipboard.on("error",function(e){scope.$apply(function(){scope.ngclipboardError({e:e})})})}}}]).directive("tooltip",function(){return{restrict:"A",scope:{tooltipTitle:"@",tooltipTitleVariable:"=",tooltipOptions:"="},link:function(scope,element,attrs){var isTooltipDynamicVariable=void 0!==scope.tooltipTitleVariable;if(scope.tooltipTitle||isTooltipDynamicVariable){var tooltipOptions=scope.tooltipOptions||{},message=scope.tooltipTitle;isTooltipDynamicVariable&&(message=scope.tooltipTitleVariable,scope.$watch("tooltipTitleVariable",function(value){element.tooltipster("content",value),value?element.tooltipster("enable"):element.tooltipster("disable")})),tooltipOptions.content=message,
element.tooltipster(tooltipOptions),scope.$on("$destroy",function(){element.tooltipster("destroy")})}}}}),angular.module("insight").filter("startFrom",function(){return function(input,start){return start=+start,input.slice(start)}}).filter("split",function(){return function(input,delimiter){var delimiter=delimiter||",";return input.split(delimiter)}}),angular.module("insight").constant("Constants",{CURRENCY:{LUX:"LUX",USD:"USD",mBTC:"mBTC",bits:"bits"},QRCOLOR:{color:"#071434",background:"#ffffff"},BLOCKS_AMOUNT:15,TRANSACTION_DISPLAYED:10,BLOCKS_DISPLAYED:5,CHART_DAYS:14,STORAGE_ROWS:5,NETWORK:window.current_network?window.current_network:"livenet",DEFAULT_LANGUAGE:localStorage.getItem("insight-language")||"en",DEFAULT_CURRENCY:localStorage.getItem("insight-currency")||"LUX",NODEMAP_LINK:window.nodemapLink}),angular.module("insight").config(function($routeProvider){$routeProvider.when("/block/:blockHash",{templateUrl:"views/block.html",title:"Quantum Block "}).when("/block-index/:blockHeight",{controller:"BlocksController",templateUrl:"views/redirect.html"}).when("/tx/send",{templateUrl:"views/transaction_sendraw.html",title:"Broadcast Raw Transaction"}).when("/tx/:txId/:v_type?/:v_index?",{templateUrl:"views/transaction.html",title:"Quantum Transaction "}).when("/",{templateUrl:"views/index.html",title:"Home"}).when("/blocks",{templateUrl:"views/block_list.html",title:"Quantum Blocks solved Today"}).when("/blocks-date/:blockDate/:startTimestamp?",{templateUrl:"views/block_list.html",title:"Quantum Blocks solved "}).when("/address/:addrStr",{templateUrl:"views/address.html",title:"Quantum Address "}).when("/contracts/:contractAddressStr",{templateUrl:"views/contract.html",title:"Quantum Contract "}).when("/status",{templateUrl:"views/status.html",title:"Status"}).when("/messages/verify",{templateUrl:"views/messages_verify.html",title:"Verify Message"}).when("/charts",{templateUrl:"views/charts.html",title:"Charts"}).when("/stats",{templateUrl:"views/statistics.html",title:"Stats"}).when("/stats/:type/:days",{controller:"StatisticsController",templateUrl:"views/chart.html",title:"Statistics"}).when("/tokens/search",{controller:"TokensSearchController",templateUrl:"views/tokens_search.html",title:"Tokens Search"}).when("/token/:address/:tab?",{controller:"TokenController",templateUrl:"views/token/token.html",title:"Token"}).when("/e404",{templateUrl:"views/404.html",title:"Error"}).when("/rich-list",{controller:"RichListController",templateUrl:"views/rich_list.html",title:"Rich List"}).otherwise({templateUrl:"views/404.html",title:"Error"})}),angular.module("insight").config(function($locationProvider){$locationProvider.html5Mode(!0),$locationProvider.hashPrefix("!")}).run(function($rootScope,$route,$location,$routeParams,$anchorScroll,gettextCatalog,amMoment,Constants){var original=$location.path;$location.path=function(path,reload){if(reload===!1)var lastRoute=$route.current,un=$rootScope.$on("$locationChangeSuccess",function(){$route.current=lastRoute,un()});return original.apply($location,[path])},gettextCatalog.currentLanguage=Constants.DEFAULT_LANGUAGE,amMoment.changeLocale(Constants.DEFAULT_LANGUAGE),$rootScope.$on("$routeChangeSuccess",function(){$rootScope.titleDetail="",$rootScope.title=$route.current.title,$rootScope.isCollapsed=!0,$rootScope.currentAddr=null,$location.hash($routeParams.scrollTo),$anchorScroll()})}),angular.element(document).ready(function(){}),angular.module("insight").run(["gettextCatalog",function(gettextCatalog){gettextCatalog.setStrings("de_DE",{"404 Page not found :(":"404 Seite nicht gefunden :(",About:"Über insight",Address:"Adresse",Age:"Alter","Application Status":"Programmstatus",Block:"Block","Block Reward":"Belohnung",Blocks:"Blöcke","Can't connect to insight server. Attempting to reconnect...":"Keine Verbindung zum insight-Server möglich. Es wird versucht die Verbindung neu aufzubauen...","Can't connect to internet. Please, check your connection.":"Keine Verbindung zum Internet möglich, bitte Zugangsdaten prüfen.","Can't connect to quantumd to get live updates from the p2p network. (Tried connecting to quantumd at {{host}}:{{port}} and failed.)":"Es ist nicht möglich mit Quantumd zu verbinden um live Aktualisierungen vom P2P Netzwerk zu erhalten. (Verbindungsversuch zu quantumd an {{host}}:{{port}} ist fehlgeschlagen.)",Complete:"Vollständig",Confirmations:"Bestätigungen","Contract Address:":"Bestätigungen:","Current Sync Status":"Aktueller Status",Details:"Details",Difficulty:"Schwierigkeit","Double spent attempt detected. From tx:":'Es wurde ein "double Spend" Versuch erkannt.Von tx:',"Error!":"Fehler!",Fee:"Gebühr","Final Balance":"Schlussbilanz",Height:"Höhe","Included in Block":"Eingefügt in Block","Incoherence in levelDB detected:":"Es wurde eine Zusammenhangslosigkeit in der LevelDB festgestellt:","Info Errors":"Fehlerbeschreibung","Initial Block Chain Height":"Ursprüngliche Blockchain Höhe","Input unconfirmed":"Eingabe unbestätigt",'Insight is an <a href="https://insight.is/" target="_blank">open-source Quantum blockchain explorer</a> with complete REST and websocket APIs that can be used for writing web wallets and other apps that need more advanced blockchain queries than provided by quantumd RPC. Check out the <a href="https://github.com/bitpay/insight-ui" target="_blank" class="ng-scope">source code</a>.':'Insight ist ein <a href="https://insight.is/" target="_blank">Open Source Quantum Blockchain Explorer</a> tmit vollständigen REST und Websocket APIs um eigene Wallets oder Applikationen zu implementieren. Hierbei werden fortschrittlichere Abfragen der Blockchain ermöglicht, bei denen die RPC des Quantumd nicht mehr ausreichen. Der aktuelle <a href="https://github.com/bitpay/insight-ui" target="_blank" class="ng-scope">Quellcode </a>tist auf Github zu finden.','Insight is still in development, so be sure to report any bugs and provide feedback for improvement at our <a href="https://github.com/bitpay/insight-ui/issues" target="_blank" class="ng-scope">github issue tracker</a>.':'Insight befindet sich aktuell noch in der Entwicklung. Bitte sende alle gefundenen Fehler (Bugs) und Feedback zur weiteren Verbesserung an unseren <a href="https://github.com/bitpay/insight-ui/issues" target="_blank" class="ng-scope">Github Issue Tracker </a>.',"Loading Transaction Details":"Lade Transaktionsdetails","Loading...":"Lade...",mined:"gefunden","Mined by":"Gefunden von","Mined Time":"Block gefunden (Mining)","Mining Difficulty":"Schwierigkeitgrad","No blocks yet.":"Keine Blöcke bisher.","No Inputs (Newly Generated Coins)":"Keine Eingänge (Neu generierte Coins)","No matching records found!":"Keine passenden Einträge gefunden!","Number Of Transactions":"Anzahl der Transaktionen","Powered  by:":"Powered by:","Previous Block":"Letzter Block","Received Time":"Eingangszeitpunkt","Redirecting...":"Umleitung...","Search for block, transaction or address":"Suche Block, Transaktion oder Adresse","See all blocks":"Alle Blöcke anzeigen",Size:"Größe","Size (bytes)":"Größe (bytes)","Start Date":"Startdatum",Stats:"Stats",Status:"Status",Summary:"Zusammenfassung","Sync Progress":"Fortschritt","Sync Status":"Syncronisation","Sync Type":"Art der Syncronisation","Synced Blocks":"Syncronisierte Blöcke","There are no transactions involving this address.":"Es gibt keine Transaktionen zu dieser Adressse","Time Offset":"Zeitoffset zu UTC",Timestamp:"Zeitstempel","Total Received":"Insgesamt empfangen","Total Sent":"Insgesamt gesendet","Total Supply:":"Insgesamt gesendet:",Transaction:"Transaktion",Transactions:"Transaktionen",Type:"Typ","Unconfirmed Transaction!":"Unbestätigte Transaktion!","Value Out:":"Wert:",Version:"Version","github issue tracker":"Github Issue Tracker","Insight is an":"Insight ist ein","open-source Quantum blockchain explorer":"Open Source Quantum Blockchain Explorer","source code":" ist auf Github zu finden","Bytes Serialized":"Serialisierte Bytes",Conn:"Verbindungen","Current Blockchain Tip (insight)":"Aktueller Blockchain Tip (insight)","Finish Date":"Fertigstellung","Hash Serialized":"Hash Serialisiert",Input:"Eingänge","Last Block Hash (Lux)":"Letzter Hash (Quantumd)","Loading Address Information":"Lade Adressinformationen","Loading Block Information":"Lade Blockinformation","Loading Selected Date...":"Lade gewähltes Datum...","Loading Transactions...":"Lade Transaktionen...","Next Block":"Nächster Block",Output:"Ausgänge","Show input":"Zeige Eingänge","Show less":"Weniger anzeigen","Show more":"Mehr anzeigen","Skipped Blocks (previously synced)":"Verworfene Blöcke (bereits syncronisiert)","Summary <small>confirmed</small>":"Zusammenfassung <small>bestätigt</small>",Testnet:"Testnet aktiv",Today:"Heute","Transaction Output Set Information":"Transaktions Abgänge","Transaction Outputs":"Abgänge","Unconfirmed Txs Balance":"Unbestätigtes Guthaben","Waiting for blocks...":"Warte auf Blöcke...","Waiting for transactions...":"Warte auf Transaktionen...","by date.":"nach Datum.","first seen at":"zuerst gesehen am","mined on:":"vom:","Waiting for blocks":"Warte auf Blöcke"}),gettextCatalog.setStrings("es",{"404 Page not found :(":"404 Página no encontrada :(",About:"Acerca de",Address:"Dirección",Age:"Edad","Application Status":"Estado de la Aplicación",Block:"Bloque","Block Reward":"Bloque Recompensa",Blocks:"Bloques","Can't connect to insight server. Attempting to reconnect...":"No se pudo conectar al servidor insight. Intentando re-conectar...","Can't connect to internet. Please, check your connection.":"No se pudo conectar a Internet. Por favor, verifique su conexión.","Can't connect to quantumd to get live updates from the p2p network. (Tried connecting to quantumd at {{host}}:{{port}} and failed.)":"No se pudo conectar a quantumd para obtener actualizaciones en vivo de la red p2p. (Se intentó conectar a quantumd de {{host}}:{{port}} y falló.)",Complete:"Completado",Confirmations:"Confirmaciones","Contract Address:":"Confirmaciones:",Copied:"CopiedTest","Current Sync Status":"Actual Estado de Sincronización",Details:"Detalles",Difficulty:"Dificultad","Double spent attempt detected. From tx:":"Intento de doble gasto detectado. De la transacción:","Error!":"¡Error!",Fee:"Tasa","Final Balance":"Balance Final",Height:"Altura","Included in Block":"Incluido en el Bloque","Incoherence in levelDB detected:":"Detectada una incoherencia en levelDB:","Info Errors":"Errores de Información","Initial Block Chain Height":"Altura de la Cadena en Bloque Inicial","Input unconfirmed":"Entrada sin confirmar",'Insight is an <a href="https://insight.is/" target="_blank">open-source Quantum blockchain explorer</a> with complete REST and websocket APIs that can be used for writing web wallets and other apps that need more advanced blockchain queries than provided by quantumd RPC. Check out the <a href="https://github.com/bitpay/insight-ui" target="_blank" class="ng-scope">source code</a>.':'Insight  es un <a href="https://insight.is/" target="_blank">explorador de bloques de Quantum open-source </a>con un complete conjunto de REST y APIs de websockets que pueden ser usadas para escribir monederos de Quantums y otras aplicaciones que requieran consultar in explorador de bloques.  Obtén el código en <a href="https://github.com/bitpay/insight-ui" target="_blank" class="ng-scope">el repositorio abierto de Github</a>.','Insight is still in development, so be sure to report any bugs and provide feedback for improvement at our <a href="https://github.com/bitpay/insight-ui/issues" target="_blank" class="ng-scope">github issue tracker</a>.':'Insight esta en desarrollo aún, por ello agradecemos que nos reporten errores o sugerencias para mejorar el software. <a href="https://github.com/bitpay/insight-ui/issues" target="_blank" class="ng-scope">Github issue tracker</a>.',"Loading Transaction Details":"Cargando Detalles de la Transacción","Loading...":"Cargando...",mined:"minado","Mined by":"Minado por","Mined Time":"Hora de Minado","Mining Difficulty":"Dificultad de Minado","No blocks yet.":"No hay bloques aún.","No Inputs (Newly Generated Coins)":"Sin Entradas (Monedas Recién Generadas)","No matching records found!":"¡No se encontraron registros coincidentes!","Number Of Transactions":"Número de Transacciones","Powered  by:":"Funciona con:","Previous Block":"Bloque Anterior","Received Time":"Hora de Recibido","Redirecting...":"Redireccionando...","Search for block, transaction or address":"Buscar bloques, transacciones o direcciones","See all blocks":"Ver todos los bloques",Size:"Tamaño","Size (bytes)":"Tamaño (bytes)","Start Date":"Fecha de Inicio",Status:"Estado",Summary:"Resumen","Sync Progress":"Proceso de Sincronización","Sync Status":"Estado de Sincronización","Sync Type":"Tipo de Sincronización","Synced Blocks":"Bloques Sincornizados","There are no transactions involving this address.":"No hay transacciones para esta dirección.","Time Offset":"Desplazamiento de hora",Timestamp:"Fecha y hora","Total Received":"Total Recibido","Total Sent":"Total Enviado","Total Supply:":"Total Enviado:",Transaction:"Transacción",Transactions:"Transacciones",Type:"Tipo","Unconfirmed Transaction!":"¡Transacción sin confirmar!","Value Out:":"Valor de Salida:",Version:"Versión","github issue tracker":"Github issue tracker","Insight is an":"Insight  es un","open-source Quantum blockchain explorer":"explorador de bloques de Quantum open-source","source code":"el repositorio abierto de Github","Bytes Serialized":"Bytes Serializados",Conn:"Con","Current Blockchain Tip (insight)":"Actual Blockchain Tip (insight)","Finish Date":"Fecha Final","Hash Serialized":"Hash Serializado",Input:"Entrada","Last Block Hash (Lux)":"Último Bloque Hash (Quantumd)","Loading Address Information":"Cargando Información de la Dirección","Loading Block Information":"Cargando Información del Bloque","Loading Selected Date...":"Cargando Fecha Seleccionada...","Loading Transactions...":"Cargando Transacciones...","Next Block":"Próximo Bloque",Output:"Salida","Show input":"Mostrar entrada","Show less":"Ver menos","Show more":"Ver más","Skipped Blocks (previously synced)":"Bloques Saltados (previamente sincronizado)","Summary <small>confirmed</small>":"Resumen <small>confirmados</small>",Testnet:"Red de prueba",Today:"Hoy","Transaction Output Set Information":"Información del Conjunto de Salida de la Transacción","Transaction Outputs":"Salidas de la Transacción","Unconfirmed Txs Balance":"Balance sin confirmar","Waiting for blocks...":"Esperando bloques...","Waiting for transactions...":"Esperando transacciones...","by date.":"por fecha.","first seen at":"Visto a","mined on:":"minado el:","Waiting for blocks":"Esperando bloques"}),gettextCatalog.setStrings("ja",{"404 Page not found :(":"404 ページがみつかりません (´・ω・`)",About:"はじめに",Address:"アドレス",Age:"生成後経過時間","An error occured in the verification process.":"検証過程でエラーが発生しました。","An error occured:<br>{{error}}":"エラーが発生しました:<br>{{error}}","Application Status":"アプリケーションの状態",Bits:"Bits",Block:"ブロック","Block Reward":"ブロック報酬",BlockHash:"ブロックのハッシュ値",Blocks:"ブロック","Broadcast Raw Transaction":"生のトランザクションを配信","Can't connect to insight server. Attempting to reconnect...":"insight サーバに接続できません。再接続しています...","Can't connect to internet. Please, check your connection.":"インターネットに接続できません。コネクションを確認してください。","Can't connect to quantumd to get live updates from the p2p network. (Tried connecting to quantumd at {{host}}:{{port}} and failed.)":"P2Pネットワークからライブ情報を取得するためにquantumdへ接続することができませんでした。({{host}}:{{port}} への接続を試みましたが、失敗しました。)",Coinbase:"コインベース",Complete:"完了",Confirmations:"検証数","Contract Address:":"検証数:","Current Sync Status":"現在の同期状況",Details:"詳細",Difficulty:"難易度","Double spent attempt detected. From tx:":"二重支払い攻撃をこのトランザクションから検知しました：","Error message:":"エラーメッセージ:","Error!":"エラー！",Fee:"手数料","Final Balance":"最終残高",Hash:"ハッシュ値",Height:"ブロック高","Included in Block":"取り込まれたブロック","Incoherence in levelDB detected:":"levelDBの破損を検知しました:","Info Errors":"エラー情報","Initial Block Chain Height":"起動時のブロック高","Input unconfirmed":"入力は未検証です",'Insight is an <a href="https://insight.is/" target="_blank">open-source Quantum blockchain explorer</a> with complete REST and websocket APIs that can be used for writing web wallets and other apps that need more advanced blockchain queries than provided by quantumd RPC. Check out the <a href="https://github.com/bitpay/insight-ui" target="_blank" class="ng-scope">source code</a>.':'Insight は、quantumd RPCの提供するものよりも詳細なブロックチェインへの問い合わせを必要とするウェブウォレットやその他のアプリを書くのに使える、完全なRESTおよびwebsocket APIを備えた <a href="http://live.insight.is/" target="_blank">オープンソースのビットコインブロックエクスプローラ</a> です。<a href="https://github.com/bitpay/insight-ui" target="_blank"> ソースコード</a> を確認.','Insight is still in development, so be sure to report any bugs and provide feedback for improvement at our <a href="https://github.com/bitpay/insight-ui/issues" target="_blank" class="ng-scope">github issue tracker</a>.':'Insight は現在開発中です。 <a href="https://github.com/bitpay/insight/issues" target="_blank">githubのissueトラッカ </a>にてバグの報告や改善案の提案をお願いします。.',"Loading Transaction Details":"トランザクションの詳細を読み込んでいます","Loading...":"ロード中...","Merkle Root":"Merkleルート",Message:"メッセージ",mined:"採掘された","Mined by":"採掘者","Mined Time":"採掘時刻","Mining Difficulty":"採掘難易度","No blocks yet.":"ブロックはありません。","No Inputs (Newly Generated Coins)":"入力なし (新しく生成されたコイン)","No matching records found!":"一致するレコードはありません！",Nonce:"Nonce","Number Of Transactions":"トランザクション数","Ooops!":"おぉっと！","Powered  by:":"Powered by:","Previous Block":"前のブロック","Quantum comes with a way of signing arbitrary messages.":"Quantumには任意のメッセージを署名する昨日が備わっています。","Raw transaction data":"トランザクションの生データ","Raw transaction data must be a valid hexadecimal string.":"生のトランザクションデータは有効な16進数でなければいけません。","Received Time":"受信時刻","Redirecting...":"リダイレクトしています...",scriptSig:"scriptSig","Search for block, transaction or address":"ブロック、トランザクション、アドレスを検索","See all blocks":"すべてのブロックをみる","Send transaction":"トランザクションを送信",Signature:"署名",Size:"サイズ","Size (bytes)":"サイズ (バイト)","Start Date":"開始日時",Status:"ステータス",Summary:"概要","Sync Progress":"同期の進捗状況","Sync Status":"同期ステータス","Sync Type":"同期タイプ","Synced Blocks":"同期されたブロック数","The message failed to verify.":"メッセージの検証に失敗しました。","The message is verifiably from {{verification.address}}.":"メッセージは{{verification.address}}により検証されました。","There are no transactions involving this address.":"このアドレスに対するトランザクションはありません。","This form can be used to verify that a message comes from\r\n        a specific Quantum address.":"このフォームでは、メッセージが特定のQuantumアドレスから来たかどうかを検証することができます。","Time Offset":"時間オフセット",Timestamp:"タイムスタンプ","Total Received":"総入金額","Total Sent":"総送金額","Total Supply:":"総送金額:",Transaction:"トランザクション","Transaction succesfully broadcast.<br>Transaction id: {{txid}}":"トランザクションの配信に成功しました。<br>トランザクションID: {{txid}}",Transactions:"トランザクション",Type:"タイプ","Unconfirmed Transaction!":"未検証のトランザクションです!","Value Out:":"出力値:",Verify:"検証","Verify signed message":"署名済みメッセージを検証",Version:"バージョン","Bytes Serialized":"シリアライズ後の容量 (バイト)",Conn:"接続数","Current Blockchain Tip (insight)":"現在のブロックチェインのTip (insight)","Finish Date":"終了日時","Hash Serialized":"シリアライズデータのハッシュ値",Input:"入力","Last Block Hash (Lux)":"直前のブロックのハッシュ値 (Lux)","Loading Address Information":"アドレス情報を読み込んでいます","Loading Block Information":"ブロック情報を読み込んでいます","Loading Selected Date...":"選択されたデータを読み込んでいます...","Loading Transactions...":"トランザクションを読み込んでいます...","Next Block":"次のブロック",Output:"出力","Show Transaction Output data":"トランザクションの出力データをみる","Show input":"入力を表示","Show less":"隠す","Show more":"表示する","Skipped Blocks (previously synced)":"スキップされたブロック (同期済み)","Summary <small>confirmed</small>":"サマリ <small>検証済み</small>",Testnet:"テストネット",Today:"今日","Transaction Output Set Information":"トランザクションの出力セット情報","Transaction Outputs":"トランザクションの出力","Unconfirmed Txs Balance":"未検証トランザクションの残高","Waiting for blocks...":"ブロックを待っています...","Waiting for transactions...":"トランザクションを待っています...","by date.":"日毎。","first seen at":"最初に発見された日時","mined on:":"採掘日時:","(Mainchain)":"(メインチェーン)","(Orphaned)":"(孤立したブロック)","Block #{{block.height}}":"ブロック #{{block.height}}",LockTime:"ロック時間","Output is spent":"出力は使用済みです","Output is unspent":"出力は未使用です",Scan:"スキャン","Show/Hide items details":"アイテムの詳細を表示または隠す","Waiting for blocks":"ブロックを待っています","by date. {{detail}} {{before}}":"日時順 {{detail}} {{before}}","{{tx.confirmations}} Confirmations":"{{tx.confirmations}} 検証",'<span class="glyphicon glyphicon-warning-sign"></span> (Orphaned)':'<span class="glyphicon glyphicon-warning-sign"></span> (孤立したブロック)','<span class="glyphicon glyphicon-warning-sign"></span> Incoherence in levelDB detected: {{vin.dbError}}':'<span class="glyphicon glyphicon-warning-sign"></span> Incoherence in levelDB detected: {{vin.dbError}}','Waiting for blocks <span class="loader-gif"></span>':'ブロックを待っています <span class="loader-gif"></span>'})}]);